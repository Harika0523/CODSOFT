# -*- coding: utf-8 -*-
"""Spam_Detection.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xOLuUMPIqzezoEzvm4usq8ntSJwkbO4J
"""

import pandas as pd
import numpy as np
import nltk
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
import re

df = pd.read_csv("/content/spam.csv", encoding='latin-1')

df.head()

df.info()

df.describe()

"""Data Cleaning

"""

df = df[['v1', 'v2']]
df.columns = ['label', 'message']

df.isnull().sum()

df.drop_duplicates(inplace=True)

"""Text preprocessing"""

def preprocess_text(text):
    # Convert to lowercase
    text = text.lower()
    # Remove special characters and numbers
    text = re.sub(r'\W', ' ', text)
    text = re.sub(r'\d', ' ', text)
    # Remove single characters
    text = re.sub(r'\s+[a-zA-Z]\s+', ' ', text)
    # Remove multiple spaces
    text = re.sub(r'\s+', ' ', text)
    return text

df['message'] = df['message'].apply(preprocess_text)

"""Feature Extraction using TF-IDF"""

tfidf = TfidfVectorizer(max_features=3000)
X = tfidf.fit_transform(df['message']).toarray()

# Encode labels
y = pd.get_dummies(df['label'], drop_first=True).values.ravel()

"""Splitting Data"""

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

"""Model Training and Evaluation"""

model = LogisticRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)
print(f"Accuracy: {accuracy_score(y_test, y_pred)}")
print(confusion_matrix(y_test, y_pred))
print(classification_report(y_test, y_pred))